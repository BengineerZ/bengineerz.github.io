---
import { siteConfig } from '../config.js';
import HomeLayout from '../layouts/HomeLayout.astro';
import PublicationsList from '../components/PublicationsList.astro';
import RecentNews from '../components/RecentNews.astro';
import { getCollection } from 'astro:content';

// Get recent blog posts
const recentPosts = (await getCollection('blog', ({ data }) => !data.draft))
  .sort((a,b) => +b.data.pubDate - +a.data.pubDate)
  .slice(0, 3); // Show only 3 most recent posts
---
<HomeLayout>
  <!-- Simple script to check scrolling -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      console.log('Checking scroll status...');
      const mainContent = document.querySelector('.main-content');
      if (mainContent) {
        console.log('Main content overflow:', getComputedStyle(mainContent).overflowY);
      }
    });
  </script>

  <section class="about">
    <h2>About Me</h2>
    <p>Welcome to my website! I'm a PhD student in Robotics at <a href="http://mit.edu" target="_blank" rel="noopener noreferrer">MIT CSAIL</a>, advised by <a href="https://people.csail.mit.edu/lpk/" target="_blank" rel="noopener noreferrer">Leslie Kaelbling</a> and <a href="https://people.csail.mit.edu/tlp/" target="_blank" rel="noopener noreferrer">Tomás Lozano-Pérez</a>.</p>
    <p>
      I study embodied reasoning: how to connect high-level knowledge and planning with the messy realities of perception, 
      control, and physical interaction. My goal is to build <strong>Rational Robots</strong> that learn from data and still adapt 
       to new tasks and environments, much like humans do!
    </p>
    <p>

      My research bridges <strong> top-down, factored reasoning and planning </strong> with <strong> bottom-up, data-driven perception and control</strong>. 
      Practically, that means designing and learning representations that capture the structure of a task (objects, goals, constraints) 
      while learning the low-level skills needed to act in the world. I develop algorithms that let these layers 
      talk to each other so a robot can plan abstractly, execute robustly, and reuse what it learns across contexts.
       Ultimately, I’m working toward general-purpose robot behavior that transfers across tasks, objects, and settings with strong sample efficiency and real-world generalization.
    </p>
  </section>

  <RecentNews />

  <PublicationsList />

  <section class="recent-posts">
    <h2>Recent Blog Posts</h2>
    {recentPosts.length > 0 ? (
      <ul>
        {recentPosts.map(post => (
          <li>
            <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
            <span class="post-date"> — {post.data.pubDate.toDateString()}</span>
          </li>
        ))}
      </ul>
    ) : (
      <p>No blog posts available yet.</p>
    )}
    <a href="/blog/" class="all-posts-link">View all posts →</a>
  </section>
</HomeLayout>

<style>
  .about, .recent-posts {
    margin: 2rem 0;
  }

  .post-date {
    color: var(--text-muted);
    font-size: 0.9rem;
  }

  .all-posts-link {
    display: inline-block;
    margin-top: 1rem;
    font-weight: 500;
  }

  section h2 {
    border-bottom: 1px solid var(--border);
    padding-bottom: 0.5rem;
    margin-bottom: 1rem;
  }
</style>